Programowanie równoległę i rozproszone
Sprawozdanie z laboratorium nr 8
Jakub Jakimiuk

Opis problemu:

Gra toczy się na nieskończonej planszy (płaszczyźnie) podzielonej na kwadratowe komórki.
Każda komórka ma ośmiu „sąsiadów”, czyli komórki przylegające do niej bokami i rogami. Każda komórka może znajdować się w
jednym z dwóch stanów: może być albo „żywa” (włączona), albo „martwa” (wyłączona). Stany komórek zmieniają się w pewnych
jednostkach czasu. Stan wszystkich komórek w pewnej jednostce czasu jest używany do obliczenia stanu wszystkich komórek w
następnej jednostce. Po obliczeniu wszystkie komórki zmieniają swój stan dokładnie w tym samym momencie. Stan komórki zależy
tylko od liczby jej żywych sąsiadów.

- Martwa komórka, która ma dokładnie 3 żywych sąsiadów, staje się żywa w następnej jednostce czasu (rodzi się)
- Żywa komórka z 2 albo 3 żywymi sąsiadami pozostaje nadal żywa; przy innej liczbie sąsiadów umiera

Struktura programu:

Importujemy biblioteke MPI(a także inne potrzebne nam biblioteki). Deklarujemy tablice global_grid która bedzie reprezentowała
naszą siatke z wynikami. Deklarujemy standardowe zmienne związane z MSI(takie jak MPI_Status stat). Konfigurujemy liczbę
iteracji. Implementujemy algorytm gry w życie.

Uzyskane wyniki:

Sposoby, w jaki struktury potrafią ewoluować jest bardzo zaskakujący. Niektóre z wyników zostały przedstawione w załączonym wideo.